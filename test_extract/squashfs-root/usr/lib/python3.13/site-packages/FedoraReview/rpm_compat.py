import rpm
import six

__all__ = ["spec", "hdr"]


def _rpm_is_sane():
    s = "aaa"
    h = rpm.hdr()
    h["name"] = s
    return h["name"] == s


if _rpm_is_sane():

    spec = rpm.spec
    hdr = rpm.hdr

else:

    def surrogate(thing):
        """
        Always return surrogate escaped unicode instead of bytes
        """
        if isinstance(thing, (six.text_type, int, type(None))):
            return thing
        if isinstance(thing, six.binary_type):
            return thing.decode("utf-8", errors="surrogateescape")
        if isinstance(thing, list):
            return [surrogate(i) for i in thing]
        if isinstance(thing, tuple):
            return tuple(surrogate(i) for i in thing)
        raise TypeError("{} is not supported".format(type(thing).__name__))

    class SurrogateHdr(rpm.hdr):
        """
        Wrapper around rpm.hdr that always gives unicode when we need it.

        Since Fedora 31, this is the default behavior, but we need to support older.
        Only wraps the parts FedoraReview actually uses.
        """

        def __getitem__(self, key):
            return surrogate(super(SurrogateHdr, self).__getitem__(key))

    class SurrogatePackage(object):
        """
        Wrapper around rpm package that always gives unicode when we need it.
        An rpm package cannot be inited, so this has the package in self._pkg.

        Since Fedora 31, this is the default behavior, but we need to support older.
        Only wraps the parts FedoraReview actually uses.
        """

        def __init__(self, pkg):
            self._pkg = pkg

        def __getattr__(self, name):
            if name == "header":
                return SurrogateHdr(self._pkg.header)
            if name == "fileList":
                return surrogate(self._pkg.fileList)
            return getattr(self._pkg, name)

    class SurrogateSpec(rpm.spec):
        """
        Wrapper around rpm.spec that always gives unicode when we need it.

        Since Fedora 31, this is the default behavior, but we need to support older.
        Only wraps the parts FedoraReview actually uses.
        """

        @property
        def sourceHeader(self):
            return SurrogateHdr(super(SurrogateSpec, self).sourceHeader)

        @property
        def packages(self):
            return [SurrogatePackage(p) for p in super(SurrogateSpec, self).packages]

    spec = SurrogateSpec
    hdr = SurrogateHdr
